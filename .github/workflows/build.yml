name: Build luci-app-uninstall IPKs

on:
  push:
    branches: [ main, master ]
    paths:
      - 'luci-app-uninstall/**'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'luci-app-uninstall/**'
      - '.github/workflows/build.yml'
  workflow_dispatch:

jobs:
  build:
    name: SDK ${{ matrix.release }} / ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release: [ '23.05.3' ]
        include:
          - target: x86/64
            short: x86_64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare host directories
        run: |
          mkdir -p artifacts/${{ matrix.release }}/${{ matrix.short }}

      - name: Download OpenWrt SDK (auto-detect filename)
        id: dl
        run: |
          set -euxo pipefail
          BASE_URL="https://downloads.openwrt.org/releases/${{ matrix.release }}/targets/${{ matrix.target }}"
          echo "BASE_URL=$BASE_URL"
          SDK_FILE=$(curl -sS "$BASE_URL/" | grep -o 'openwrt-sdk-[^"<]*\.tar\.xz' | head -n1)
          if [ -z "$SDK_FILE" ]; then
            echo "Could not find SDK tarball at $BASE_URL" >&2
            exit 1
          fi
          echo "SDK_FILE=$SDK_FILE"
          curl -fL "$BASE_URL/$SDK_FILE" -o sdk.tar.xz
          mkdir -p sdk && tar -C sdk -xJf sdk.tar.xz
          SDK_DIR=$(find sdk -maxdepth 1 -type d -name 'openwrt-sdk-*' | head -n1)
          if [ -z "$SDK_DIR" ]; then
            echo "SDK dir not found after extraction" >&2
            exit 1
          fi
          echo "sdk_dir=$SDK_DIR" >> $GITHUB_OUTPUT

      - name: Build package with SDK
        run: |
          set -euxo pipefail
          SDK_DIR='${{ steps.dl.outputs.sdk_dir }}'
          pushd "$SDK_DIR"
          ./scripts/feeds update -a
          ./scripts/feeds install -a || true
          rm -rf package/luci-app-uninstall
          cp -a "$GITHUB_WORKSPACE/luci-app-uninstall" package/
          make defconfig
          make package/luci-app-uninstall/compile -j$(nproc) V=sc || true
          mkdir -p "$GITHUB_WORKSPACE/artifacts/${{ matrix.release }}/${{ matrix.short }}"
          shopt -s nullglob globstar || true
          for d in bin/packages/*/*/{luci,packages}; do
            cp -v "$d"/luci-app-uninstall*.ipk "$GITHUB_WORKSPACE/artifacts/${{ matrix.release }}/${{ matrix.short }}/" 2>/dev/null || true
          done
          for d in bin/targets/**; do
            cp -v "$d"/packages/luci-app-uninstall*.ipk "$GITHUB_WORKSPACE/artifacts/${{ matrix.release }}/${{ matrix.short }}/" 2>/dev/null || true
          done
          popd

      - name: List artifacts
        run: |
          ls -al artifacts/${{ matrix.release }}/${{ matrix.short }} || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-uninstall_${{ matrix.release }}_${{ matrix.short }}
          path: artifacts/${{ matrix.release }}/${{ matrix.short }}/*.ipk
          if-no-files-found: warn
